plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "ru.myproevent"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        generateStubs = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def emailHintApiKey = properties.getProperty("EMAIL_HINT_API_TOKEN", "")
        it.buildConfigField "String", "EMAIL_HINT_API_TOKEN", emailHintApiKey
        def emailHintApiUrl = properties.getProperty("EMAIL_HINT_API_URL", "")
        it.buildConfigField "String", "EMAIL_HINT_API_URL", emailHintApiUrl
    }
}

dependencies {
    // Default - то что положил Android Studio при создании проекта
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.security:security-crypto:1.1.0-alpha02'
    implementation 'com.google.android.gms:play-services-maps:18.0.1'
    implementation 'com.google.android.gms:play-services-location:19.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Dagger 2 - управление зависимостями
    implementation "com.google.dagger:dagger:2.37"
    implementation "com.google.dagger:dagger-android:2.37"
    implementation "com.google.dagger:dagger-android-support:2.37"
    kapt "com.google.dagger:dagger-compiler:2.37"
    kapt "com.google.dagger:dagger-android-processor:2.37"

    // Moxy - lifecycle MVP presenter-a
    implementation "com.github.moxy-community:moxy:2.1.2"
    kapt "com.github.moxy-community:moxy-compiler:2.1.2"
    implementation "com.github.moxy-community:moxy-ktx:2.1.2"
    implementation "com.github.moxy-community:moxy-androidx:2.1.2"

    // Cicerone - навигация
    implementation 'com.github.terrakok:cicerone:6.6'

    // Calligraphy - изменение шрифта по умолчанию
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'

    // Retrofit - взаимодействие с сетью
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

    // HttpLoggingInterceptor - логирование Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    // RXJava - реактивное взаимодействие компонентов
    implementation "io.reactivex.rxjava2:rxjava:2.2.20"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Glide - использование изображений из интернета
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // Android image cropper
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
}
